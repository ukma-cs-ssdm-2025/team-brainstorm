openapi: 3.1.0
info:
  title: Library Management API
  description: API для онлайн-каталогу бібліотеки
  version: 1.0.0
paths:
  /books:
    get:
      summary: Список книг
      operationId: list_books_books_get
      parameters:
      - name: available_only
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Available Only
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
                title: Response List Books Books Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /reservations:
    post:
      summary: Create Reservation
      operationId: create_reservation_reservations_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /reservations/{reservation_id}:
    delete:
      summary: Cancel Reservation
      operationId: cancel_reservation_reservations__reservation_id__delete
      parameters:
      - name: reservation_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Reservation Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /users/{user_id}/reservations:
    get:
      summary: User Reservations
      operationId: user_reservations_users__user_id__reservations_get
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservation'
                title: Response User Reservations Users  User Id  Reservations Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /books/availability:
    get:
      summary: Search Books
      operationId: search_books_books_availability_get
      parameters:
      - name: title
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
                title: Response Search Books Books Availability Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    Book:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        isbn:
          type: string
          maxLength: 17
          minLength: 10
          title: Isbn
          example: 978-3-16-148410-0
        title:
          type: string
          title: Title
          example: Clean Code
        author:
          type: string
          title: Author
          example: Robert C. Martin
        total_copies:
          type: integer
          minimum: 0.0
          title: Total Copies
          example: 3
      type: object
      required:
      - id
      - isbn
      - title
      - author
      - total_copies
      title: Book
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    Reservation:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        user_id:
          type: string
          format: uuid
          title: User Id
        book_id:
          type: string
          format: uuid
          title: Book Id
        from_date:
          type: string
          format: date
          title: From Date
        until:
          anyOf:
          - type: string
            format: date
          - type: 'null'
          title: Until
      type: object
      required:
      - id
      - user_id
      - book_id
      - from_date
      - until
      title: Reservation
    ReservationCreate:
      properties:
        user_id:
          type: string
          format: uuid
          title: User Id
        book_id:
          type: string
          format: uuid
          title: Book Id
        until:
          anyOf:
          - type: string
            format: date
          - type: 'null'
          title: Until
      type: object
      required:
      - user_id
      - book_id
      title: ReservationCreate
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
